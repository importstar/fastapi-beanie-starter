#!/usr/bin/env python3
"""
Example script to demonstrate module creation
This script creates a 'products' module as an example
"""

import subprocess
import sys
from pathlib import Path


def create_example_module():
    """Create an example products module"""
    # Get the create-module script path relative to this script
    script_path = Path(__file__).resolve().parent / "create-module"

    print("üéØ Creating example 'products' module...")
    print("=" * 50)

    # Mock user input by writing to a temporary input file
    input_data = "products\ny\n"

    try:
        # Run the create-module script with simulated input
        process = subprocess.Popen(
            [sys.executable, str(script_path)],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
            cwd=script_path.parent.parent,
        )

        stdout, stderr = process.communicate(input=input_data)

        if process.returncode == 0:
            print(stdout)
            print("\n‚úÖ Example module creation completed!")
            print("\nüìã You can now:")
            print("1. Check the generated files in api_app/modules/products/")
            print(
                "2. Update api_app/infrastructure/database.py to include Products model"
            )
            print("3. Run the API to test the new endpoints")
        else:
            print(f"‚ùå Error: {stderr}")
            print(f"Return code: {process.returncode}")

    except Exception as e:
        print(f"‚ùå Failed to create example module: {e}")


if __name__ == "__main__":
    create_example_module()
